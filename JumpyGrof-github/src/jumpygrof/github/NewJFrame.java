/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jumpygrof.github;

import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintWriter;
import javax.swing.JTextField;
import static jumpygrof.github.JumpyGrof.Hafiz;

/**
 *
 * @author HP
 */
public class NewJFrame extends javax.swing.JFrame {
    static int x;
    static int index = 0;
    static int i=0;
    static int r=0;
    static int z;
    static int index2 = 1;
    static LinkedList<Kangaroo> Kangaroos = new LinkedList<Kangaroo>();
    static Map Hafiz = new Map();
    
    GraphVisualization graph = new GraphVisualization();
    static java.util.LinkedList<String> DistinctVertex = new java.util.LinkedList<String>();//used to enter vertexes
    static java.util.LinkedList<String> SourceVertex = new java.util.LinkedList<String>();//to form directed graph
    static java.util.LinkedList<String> DestinationVertex = new java.util.LinkedList<String>();//to form directed graph
    static java.util.LinkedList<Integer> EdgeHeight = new java.util.LinkedList<Integer>();//used to enter edge weight
    
    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        nPoints = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        inPoints = new javax.swing.JTextField();
        panelPoints = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        inIDPoint = new javax.swing.JTextField();
        inFood = new javax.swing.JTextField();
        inCapacity = new javax.swing.JTextField();
        inPaths = new javax.swing.JTextField();
        panelConnections = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        label3 = new javax.swing.JLabel();
        inConnected = new javax.swing.JTextField();
        inHeight = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        NoOfKangaroo = new javax.swing.JLabel();
        inKangaroo = new javax.swing.JTextField();
        panelKangaroo = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        inStartPoint = new javax.swing.JTextField();
        inPouch = new javax.swing.JTextField();
        inGender = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        inThreshold = new javax.swing.JTextField();
        ok1 = new javax.swing.JButton();
        ok2 = new javax.swing.JButton();
        ok3 = new javax.swing.JButton();

        jLabel4.setText("jLabel4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(0, 153, 153));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        jTextField1.setText("  JUMPY GROF");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel2.setText("No of points");

        javax.swing.GroupLayout nPointsLayout = new javax.swing.GroupLayout(nPoints);
        nPoints.setLayout(nPointsLayout);
        nPointsLayout.setHorizontalGroup(
            nPointsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, nPointsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        nPointsLayout.setVerticalGroup(
            nPointsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        inPoints.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inPointsActionPerformed(evt);
            }
        });

        jLabel1.setText("ID of point");

        jLabel3.setText("No of food");

        jLabel6.setText("Capacity of kangaroos");

        jLabel7.setText("No of paths connected");

        inIDPoint.setEditable(false);

        inFood.setEditable(false);

        inCapacity.setEditable(false);

        inPaths.setEditable(false);
        inPaths.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inPathsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelPointsLayout = new javax.swing.GroupLayout(panelPoints);
        panelPoints.setLayout(panelPointsLayout);
        panelPointsLayout.setHorizontalGroup(
            panelPointsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPointsLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(panelPointsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(panelPointsLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(inIDPoint, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(54, 54, 54)
                .addGroup(panelPointsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPointsLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(49, 49, 49)
                        .addComponent(jLabel6)
                        .addGap(41, 41, 41)
                        .addComponent(jLabel7)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelPointsLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(inFood, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(83, 83, 83)
                        .addComponent(inCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(inPaths, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57))))
        );
        panelPointsLayout.setVerticalGroup(
            panelPointsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPointsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelPointsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelPointsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inIDPoint)
                    .addComponent(inFood)
                    .addComponent(inCapacity)
                    .addComponent(inPaths, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        panelConnections.setPreferredSize(new java.awt.Dimension(300, 90));

        jLabel8.setText("ID of connected point");

        jLabel9.setText("height of obstacles");

        label3.setText("                            ");

        inConnected.setEditable(false);

        inHeight.setEditable(false);
        inHeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inHeightActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelConnectionsLayout = new javax.swing.GroupLayout(panelConnections);
        panelConnections.setLayout(panelConnectionsLayout);
        panelConnectionsLayout.setHorizontalGroup(
            panelConnectionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelConnectionsLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(32, 32, 32))
            .addGroup(panelConnectionsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panelConnectionsLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(inConnected, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(inHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61))
        );
        panelConnectionsLayout.setVerticalGroup(
            panelConnectionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelConnectionsLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(label3)
                .addGroup(panelConnectionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelConnectionsLayout.createSequentialGroup()
                        .addGroup(panelConnectionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                        .addComponent(inConnected, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelConnectionsLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(inHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10))
        );

        NoOfKangaroo.setText("No of kangaroos");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(NoOfKangaroo)
                .addContainerGap(13, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(NoOfKangaroo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        inKangaroo.setEditable(false);
        inKangaroo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inKangarooActionPerformed(evt);
            }
        });

        jLabel10.setText("Starting point");

        jLabel11.setText("Gender");

        jLabel12.setText("Pouch Capacity");

        inStartPoint.setEditable(false);

        inPouch.setEditable(false);

        inGender.setEditable(false);

        javax.swing.GroupLayout panelKangarooLayout = new javax.swing.GroupLayout(panelKangaroo);
        panelKangaroo.setLayout(panelKangarooLayout);
        panelKangarooLayout.setHorizontalGroup(
            panelKangarooLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelKangarooLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(panelKangarooLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelKangarooLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(inStartPoint, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(inGender, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelKangarooLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(55, 55, 55)
                        .addComponent(jLabel11)))
                .addGap(51, 51, 51)
                .addGroup(panelKangarooLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelKangarooLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(inPouch, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel12))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelKangarooLayout.setVerticalGroup(
            panelKangarooLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelKangarooLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelKangarooLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelKangarooLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inStartPoint, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addComponent(inPouch, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addComponent(inGender, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
                .addGap(18, 18, 18))
        );

        jLabel5.setText("Threshold ");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
        );

        inThreshold.setEditable(false);
        inThreshold.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inThresholdActionPerformed(evt);
            }
        });

        ok1.setText("OK");
        ok1.setEnabled(false);
        ok1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ok1MouseClicked(evt);
            }
        });

        ok2.setText("OK");
        ok2.setEnabled(false);
        ok2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ok2MouseClicked(evt);
            }
        });

        ok3.setText("OK");
        ok3.setEnabled(false);
        ok3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ok3MouseClicked(evt);
            }
        });
        ok3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ok3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(inKangaroo, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(inThreshold, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(nPoints, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(inPoints, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(panelKangaroo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(ok3)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panelPoints, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(panelConnections, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(ok2)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addComponent(ok1)
                        .addGap(31, 31, 31))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(245, 245, 245)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(inPoints, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nPoints, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(panelPoints, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(ok1)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(panelConnections, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                        .addGap(27, 27, 27)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(inKangaroo)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(panelKangaroo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(inThreshold)
                            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(48, 48, 48))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(ok2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ok3)
                        .addGap(118, 118, 118))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void inPathsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inPathsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inPathsActionPerformed
    private void inPointsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inPointsActionPerformed
        
    String y = inPoints.getText();
    if(checkNumber(y, inPoints) == true){
        x = Integer.parseInt(y);
        inPoints.setEditable(false);
        inFood.setEditable(true);
        inCapacity.setEditable(true);
        inPaths.setEditable(true);
        ok1.setEnabled(true);
        Hafiz = new Map(x);
        inIDPoint.setText(index+1 + "");
    }        
    }//GEN-LAST:event_inPointsActionPerformed
    
    private void ok1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ok1MouseClicked
        if(index < x){
            
            if(checkNumber(inIDPoint.getText(), inIDPoint)==true && 
               checkNumber(inFood.getText(), inFood)==true &&
               checkNumber(inCapacity.getText(), inCapacity)==true &&
               checkNumber(inPaths.getText(), inPaths)==true){
                
                
                Hafiz.points.addNode(new Points(Integer.parseInt(inIDPoint.getText()), Integer.parseInt(inFood.getText()),
                        Integer.parseInt(inCapacity.getText()), Integer.parseInt(inPaths.getText())));
                DistinctVertex.add(inIDPoint.getText());
                
                
                    index++;
                    if(index>=x){
                        ok1.setEnabled(false);
                        inFood.setEditable(false);
                        inCapacity.setEditable(false);
                        inPaths.setEditable(false);
                        iterate();
                    
                    }else{
                        inIDPoint.setText(index+1 + "");
                        inFood.setText("");
                        inCapacity.setText("");
                        inPaths.setText("");
                    }
                
               
            }else{
                inFood.setText("");
                inCapacity.setText("");
                inPaths.setText("");
                
            }
        }
    }//GEN-LAST:event_ok1MouseClicked
    public void iterate() {

        if (i < Hafiz.numberofpoints) {
            if ((Hafiz.points.atindex(i).getnumroute() != 0)) {

                label3.setText("Point " + Hafiz.points.atindex(i).getpointID() + " is connected to");
                inConnected.setEditable(true);
                inHeight.setEditable(true);
                ok2.setEnabled(true);

            } else {
                i++;
                iterate();
            }
        } else {

            inConnected.setEditable(false);
            inHeight.setEditable(false);
            ok2.setEnabled(false);
            inKangaroo.setEditable(true);

        }

    }
    private void ok2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ok2MouseClicked
        if (r < Hafiz.points.atindex(i).getnumroute()) {
            if (checkNumber(inConnected.getText(), inConnected) == true && checkNumber(inHeight.getText(), inHeight) == true) {
                int connectedID = Integer.parseInt(inConnected.getText());
                int tempheight = Integer.parseInt(inHeight.getText());
                for (int t = 0; t < Hafiz.numberofpoints; t++) {
                    if (Hafiz.points.atindex(t).getpointID() == connectedID) { //CHECK THIS ONE AGAIN    
                        Hafiz.points.atindex(i).addroute(new Route(Hafiz.points.atindex(t), tempheight));// tambah jalan
                        inConnected.setText("");
                        inHeight.setText("");
                        r++;
                        
                        SourceVertex.add(Integer.toString(Hafiz.points.atindex(i).getpointID())); 
                        DestinationVertex.add(Integer.toString(connectedID)); 
                        EdgeHeight.add(tempheight);
                        
                    }
                }
            } else {
                inConnected.setText("");
                inHeight.setText("");
            }
        }

        if (r >= Hafiz.points.atindex(i).getnumroute()) {
            r = 0;
            i++;
            inConnected.setText("");
            inHeight.setText("");
            iterate();
        }
    }//GEN-LAST:event_ok2MouseClicked
   
    
    
    
    
    private void ok3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ok3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ok3ActionPerformed

    private void inHeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inHeightActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inHeightActionPerformed

    private void inKangarooActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inKangarooActionPerformed
        String g = inKangaroo.getText();
    if(checkNumber(g, inKangaroo) == true){
        z = Integer.parseInt(g);
        inKangaroo.setEditable(false);
        inStartPoint.setEditable(true);
        inGender.setEditable(true);
        inPouch.setEditable(true);
        ok3.setEnabled(true);
        
    }       
    }//GEN-LAST:event_inKangarooActionPerformed

    private void ok3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ok3MouseClicked
        if(index2 <= z){
            if(checkNumber(inStartPoint.getText(), inStartPoint)==true && 
               checkNumber(inPouch.getText(), inPouch)==true &&
               checkGender(inGender.getText(), inGender)==true){
                char c = inGender.getText().charAt(0);
                char c1 = Character.toUpperCase(c);
                Kangaroos.addNode(new Kangaroo(Integer.parseInt(inStartPoint.getText()), c1, Integer.parseInt(inPouch.getText())));
                
                inStartPoint.setText("");
                inGender.setText("");
                inPouch.setText("");
                index2++;
                if(index2>z){
                    ok3.setEnabled(false);
                    inStartPoint.setEditable(false);
                    inGender.setEditable(false);
                    inPouch.setEditable(false);
                    inThreshold.setEditable(true);
                }
            }else{
                inStartPoint.setText("");
                inGender.setText("");
                inPouch.setText("");
            }
        }
    }//GEN-LAST:event_ok3MouseClicked

    
    
    
    
    
    private void inThresholdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inThresholdActionPerformed
        String c = inThreshold.getText();
    if(checkNumber(c, inThreshold) == true){
        int threshold = Integer.parseInt(c);
        inThreshold.setEditable(false);
        Points.colony = threshold;
        output();
        System.exit(0);
    }       
    }//GEN-LAST:event_inThresholdActionPerformed
    
    
    
    
    
    
    public boolean checkNumber(String a, JTextField b){
            try{
                int x = Integer.parseInt(a);
            }catch(NumberFormatException e){
                b.setText("");
                return false;
            }
            return true;
    }
    public boolean checkGender(String a, JTextField b){
           
        char x = a.charAt(0);
        if(x == 'M' || x == 'F' || x == 'm' || x == 'f'){
            return true;
        }else{
            b.setText("");
            return false;
        }
    }
    public void output(){
       
        graph.Visualize_Directed_Graph(DistinctVertex, SourceVertex, DestinationVertex, EdgeHeight);
        
        System.out.println("_____________________________________________________________");
        System.out.println("List of route taken by the Kangaroo(s)");
        Hafiz.tick();
        
        
        //
        int counter = 0;
        for (int i = 0; i < NewJFrame.Kangaroos.length(); i++) { //kira bilangan kangaroo yang ada dalam colony
            if (NewJFrame.Kangaroos.atindex(i).isincolony() == false) {
              //  System.out.println(JumpyGrof.Kangaroos.atindex(i).toString());
                counter++;
            } 
        }
        for (int i = 0; i < NewJFrame.Hafiz.points.length(); i++) {
         //   System.out.println("Food at point " + JumpyGrof.Hafiz.points.atindex(i).getpointID() + ": " + JumpyGrof.Hafiz.points.atindex(i).getfood());
        }

      //  System.out.println("Number of colony formed: " + Points.numberofcolony);
        System.out.println();
        System.out.println();
        //List of Kangaroos that was not able to colonized
        System.out.println("List of Kangaroos that was not able to colonized");
        System.out.println("Number of Remaining Kangaroos: " + counter);
        for(int i = 0;i<NewJFrame.Kangaroos.length();i++){
            if(NewJFrame.Kangaroos.atindex(i).isincolony()==false)
            System.out.println(NewJFrame.Kangaroos.atindex(i).toString());
        }
        System.out.println();
        System.out.println();
        counter = 0;
        //
        
        //
        System.out.println("LIST OF FOOD LEFT (DEBUGGING)");
        for (int i = 0;i<NewJFrame.Hafiz.points.length();i++){
            System.out.println("Food at point "+NewJFrame.Hafiz.points.atindex(i).getpointID()+": "+NewJFrame.Hafiz.points.atindex(i).getfood());
        }
        System.out.println();
        //
        
        //List of Kangaroos that are able to colonized
        System.out.println("List of Kangaroos that are able to colonized");
        for(int i = 0;i<NewJFrame.Kangaroos.length();i++){
            if(NewJFrame.Kangaroos.atindex(i).isincolony()==true)
            counter++;   
        }     
        System.out.println("Number of colony formed: "+Points.numberofcolony);
        System.out.println("Number of Kangaroos that are colonized: " + counter);
        for (int i = 0; i < NewJFrame.Hafiz.points.length(); i++) {
            if (NewJFrame.Hafiz.points.atindex(i).iscolonized() == true) {
                System.out.println("Colony at point " + NewJFrame.Hafiz.points.atindex(i).getpointID());
                for (int j = 0; j < NewJFrame.Kangaroos.length(); j++) {
                    if (NewJFrame.Kangaroos.atindex(j).getpointID() == NewJFrame.Hafiz.points.atindex(i).getpointID()) {
                        System.out.println(NewJFrame.Kangaroos.atindex(j).toString());
                    }
                }
            }
        }
        System.out.println("________________________________________________________________________________________");
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel NoOfKangaroo;
    private javax.swing.JTextField inCapacity;
    private javax.swing.JTextField inConnected;
    private javax.swing.JTextField inFood;
    private javax.swing.JTextField inGender;
    private javax.swing.JTextField inHeight;
    private javax.swing.JTextField inIDPoint;
    private javax.swing.JTextField inKangaroo;
    private javax.swing.JTextField inPaths;
    private javax.swing.JTextField inPoints;
    private javax.swing.JTextField inPouch;
    private javax.swing.JTextField inStartPoint;
    private javax.swing.JTextField inThreshold;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel label3;
    private javax.swing.JPanel nPoints;
    private javax.swing.JButton ok1;
    private javax.swing.JButton ok2;
    private javax.swing.JButton ok3;
    private javax.swing.JPanel panelConnections;
    private javax.swing.JPanel panelKangaroo;
    private javax.swing.JPanel panelPoints;
    // End of variables declaration//GEN-END:variables
}
